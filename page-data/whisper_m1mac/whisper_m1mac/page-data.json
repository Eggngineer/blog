{"componentChunkName":"component---src-templates-blog-post-js","path":"/whisper_m1mac/whisper_m1mac/","result":{"data":{"site":{"siteMetadata":{"title":"szaklog"}},"markdownRemark":{"id":"9000f8a0-9686-54bf-8433-bdcc9e36c100","excerpt":"whisperで遊ぶ 今回は，最近話題になっていたOpenAIの音声認識ツールwhisperを使って遊んでみたので，知見を共有します． 実行環境 Macbook Air (M1) macOS Monterey: 12.6.1 Python3.9.9 pyenv+virtualenv local…","html":"<h1>whisperで遊ぶ</h1>\n<p>今回は，最近話題になっていたOpenAIの音声認識ツールwhisperを使って遊んでみたので，知見を共有します．</p>\n<h2>実行環境</h2>\n<ul>\n<li>Macbook Air (M1)</li>\n<li>macOS Monterey: 12.6.1</li>\n<li>Python3.9.9\n<ul>\n<li>pyenv+virtualenv</li>\n<li>local</li>\n</ul>\n</li>\n</ul>\n<h2>セットアップ</h2>\n<p>基本的には<a href=\"https://github.com/openai/whisper\">公式</a>に従って進めました．</p>\n<ol>\n<li>\n<p><code class=\"language-text\">ffmpeg</code>のインストール</p>\n<p>MacOS(brew)に従います．</p>\n<div class=\"gatsby-highlight\" data-language=\"shell\"><pre class=\"language-shell\"><code class=\"language-shell\">brew <span class=\"token function\">install</span> ffmpeg</code></pre></div>\n</li>\n<li>\n<p><a href=\"https://rustup.rs\">Rust</a>が必要とのこと．それに伴って<code class=\"language-text\">setuptools-rust</code>を<code class=\"language-text\">pip install</code>する．</p>\n<div class=\"gatsby-highlight\" data-language=\"shell\"><pre class=\"language-shell\"><code class=\"language-shell\"><span class=\"token function\">curl</span> <span class=\"token parameter variable\">--proto</span> <span class=\"token string\">'=https'</span> <span class=\"token parameter variable\">--tlsv1.2</span> <span class=\"token parameter variable\">-sSf</span> https://sh.rustup.rs <span class=\"token operator\">|</span> <span class=\"token function\">sh</span> <span class=\"token comment\"># Rustのインストール</span>\npip <span class=\"token function\">install</span> setuptools-rust <span class=\"token comment\">#setuptools-rustのインストール</span></code></pre></div>\n</li>\n<li>\n<p>Rustをインストールしたのち，<code class=\"language-text\">cargo</code>のパスを通す．</p>\n<div class=\"gatsby-highlight\" data-language=\"shell\"><pre class=\"language-shell\"><code class=\"language-shell\"><span class=\"token builtin class-name\">echo</span> <span class=\"token builtin class-name\">export</span> <span class=\"token assign-left variable\"><span class=\"token environment constant\">PATH</span></span><span class=\"token operator\">=</span><span class=\"token string\">\"<span class=\"token environment constant\">$HOME</span>/.cargo/bin:<span class=\"token environment constant\">$PATH</span>\"</span> <span class=\"token operator\">>></span> <span class=\"token environment constant\">$HOME</span>/.zshenv</code></pre></div>\n</li>\n<li>\n<p>shellを再起動するか，以下のコマンドを実行する．</p>\n<div class=\"gatsby-highlight\" data-language=\"shell\"><pre class=\"language-shell\"><code class=\"language-shell\"><span class=\"token builtin class-name\">source</span> <span class=\"token string\">\"<span class=\"token environment constant\">$HOME</span>/.cargo/bin:<span class=\"token environment constant\">$PATH</span>\"</span></code></pre></div>\n</li>\n<li>\n<p>インストール環境が揃ったので，<code class=\"language-text\">whisper</code>を<code class=\"language-text\">pip install</code>する．</p>\n<div class=\"gatsby-highlight\" data-language=\"shell\"><pre class=\"language-shell\"><code class=\"language-shell\">pip <span class=\"token function\">install</span> git+https://github.com/openai/whisper.git </code></pre></div>\n</li>\n</ol>\n<p>これで<code class=\"language-text\">whisper</code>が使えるはず．</p>\n<h2>コケたポイント</h2>\n<ul>\n<li>\n<p>5.でgitコマンドの認証に関するエラーを吐く</p>\n<p>これに関して自分も引っかかった．具体的には，<code class=\"language-text\">cargo</code>コマンドの仕様によるもので，<code class=\"language-text\">cargo</code>は基本的には<code class=\"language-text\">ssh-agent</code>を使用して公開鍵認証をパスしてGithubに接続するようです．もちろん<code class=\"language-text\">ssh-agent</code>に秘密鍵を登録しておかないと認証失敗します．従って解決方法は，</p>\n<ol>\n<li><code class=\"language-text\">ssh-agent</code>に秘密鍵を登録する．</li>\n<li><code class=\"language-text\">cargo</code>のオプションを指定して，<code class=\"language-text\">ssh-agent</code>で認証失敗したら<code class=\"language-text\">git</code>コマンドでの取得をトライするようにする．</li>\n</ol>\n<p>という二択になります．</p>\n<ol>\n<li>\n<p><code class=\"language-text\">ssh-agent</code>に秘密鍵を登録する．</p>\n<p>Githubのssh登録に関しては他のWebサイトに任せます．以下は秘密鍵が<code class=\"language-text\">$HOME/path/to/secret.key</code>にあるとします．</p>\n<div class=\"gatsby-highlight\" data-language=\"shell\"><pre class=\"language-shell\"><code class=\"language-shell\">ssh-add --apple-use-keychain <span class=\"token environment constant\">$HOME</span>/path/to/secret.key</code></pre></div>\n<p>※<code class=\"language-text\">ssh-add</code>の<code class=\"language-text\">-K</code>オプションは<code class=\"language-text\">--apple-use-keychain</code>に置換えられていくらしい．</p>\n</li>\n<li>\n<p><code class=\"language-text\">cargo</code>のオプションを指定して，<code class=\"language-text\">ssh-agent</code>で認証失敗したら<code class=\"language-text\">git</code>コマンドでの取得をトライするようにする．</p>\n<p><code class=\"language-text\">$HOME/.cargo/config</code>に以下を加えるだけ．</p>\n<div class=\"gatsby-highlight\" data-language=\"conf\"><pre class=\"language-conf\"><code class=\"language-conf\">[net]\ngit-fetch-with-cli = true</code></pre></div>\n</li>\n</ol>\n</li>\n</ul>","frontmatter":{"title":"m1macでOpenAIのwhisperを遊ぶ","date":"October 02, 2022","description":"M1Macbook Air を使ってwhisperで遊びます．install時のエラーについても説明します．"}},"previous":{"fields":{"slug":"/self-introduce/post/"},"frontmatter":{"title":"イントロ"}},"next":null},"pageContext":{"id":"9000f8a0-9686-54bf-8433-bdcc9e36c100","previousPostId":"190ce818-cdfe-539a-8159-248b7ed3e8b2","nextPostId":null}},"staticQueryHashes":["2355076697","2841359383"]}